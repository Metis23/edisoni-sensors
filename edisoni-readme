
This document describes a general method of electronic sensing, recording, 
and viewing data using the following components:

1. Sensors
2. Intel Edison microcomputer
3. Local wireless network
4. Server: files, web, database
5. Workstation computer 
6. Software

Task: Flash Edison and Connect to Wireless Network (per Intel)

Task: Writing Data to and from Edison

Inconveniently, Edison's kernel does not support samba shares. Instead of samba, the ssh file system function (sshfs) is used to mount directories from Edison onto other computers:

Install sshfs on the workstation and server:
	apt-get install sshfs
Keys are generated in the workstation and the server and shared with the Edison (root@192.168.1.20 in this example) using the ssh key copying function: 
	ssh-keygen -t rsa
	ssh-copy-id -i id_rsa.pub root@192.168.1.20
Note that ssh-copy-id function is not available from Edison. In general sshfs is used to mount some or all of the Edison's file system in this way: 
	sshfs <edison's@ip_address:path> ,<server or workstation local path> 
In our case, the commmand from workstation and server is: 
	sshfs root@192.168.1.20:/home/root/ edroot -o reconnect -C -o  workaround=all
This mounts Edison's /home/root at local ~/edroot. The “-o reconnect”  option directs sshfs to reconnect if the connection to the Edison is lost. Terminal windows accessing the mounted directories freeze when the Edison is powered off (recovery possible with fusermount -u edroot or kill <ssh PID(s)>). The  ssh configuration files were changed by adding the following to /etc/ssh/ssh_config:

	ServerAliveInterval 15
	ServerAliveCountMax 3

Task: Read Sensor Data with Edison

      Photocell: Photocell uses an analog input.  The sensor is installed with a resistor (min 10K Ohm) in series. Using the mraa library with python, the sensor voltage is accessed with: "photocell = mraa.Aio(0)" for analog I/O 0.  Average of 10 readings spaced at 0.2 seconds was used for one measurement.
      Temperature
      Distance sensor (UT)
      Accelerometer/vibration sensor combo
      
Task: Store and Process Incoming Data

     Use RRD-tool to store database: Install rrdpython libraries, and include their location in the Path.  RRD database is created and then updated by a script called by crontab at a time interval.  
     Use RRD-cgi to make charts
     Use Apache web server to display latest charts
     Guidance here: https://oss.oetiker.ch/rrdtool/tut/rrdtutorial.en.html

